openapi: 3.0.3
info:
  title: Swagger Coding Blog 
  version: 1.0.11
servers:
  - url: http://localhost:3000/api
tags:
  - name: auth
    description: Sign In, Sign Up, Forgot Password
  - name: user
    description: Manage users
  - name: language
    description: Manage languages
  - name: post
    description: Manage posts
  - name: category
    description: Manage categories
paths:
   /auth/sign-in:
    post:
      tags:
        - auth
      description: Sign In to Coding Blog Website
      operationId: sign-in
      requestBody:
        description: Sign In Information
        content:
          application/json:
            schema:
               type: object
               properties:
                email:
                 type: string
                 example: "manhnv2k1@gmail.com"
                password:
                 type: string
                 example: "12345678"
        required: true
      responses:
        '200':
          description: Sign in successfully!
          content:
           application/json:
            schema:
               type: object
               properties:
                success:
                 type: string
                 example: true
                data:
                 type: object
                 properties:
                   user:
                    type: object
                    $ref: '#/components/schemas/User'
                   access_token:
                     type: string
                     example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjUsImlhdCI6MTcxNDk2NjIxNCwiZXhwIjoxNzE0OTY5ODE0fQ.9TGf42_7umYPLE2pXkOdQ-HQgreKKK5Nwm6OyZIRwIU"
                status:
                 type: integer
                 example: 200
                message:
                 type: string
                 example: "ok"
             
        '404':
          description: Invalid Input 
          content:
           application/json:
            schema:
              type: object
              properties:
               success:
                 type: string
                 example: false
               status:
                 type: integer
                 example: 404
               message:
                 type: string
                 example: "Email not found"  
   /posts:
    get:
      tags:
        - post
      description: Get a list of posts
      operationId: list posts
      security:
        - BearerAuth: []
      responses:
        '200': 
         description: "Get all posts successfully"
         content:
           application/json:
            schema:
               type: object
               properties:
                success:
                 type: string
                 example: true
                data:
                 type: array
                 items:
                   schema:
                   $ref: '#/components/schemas/Post'
                status:
                 type: integer
                 example: 200
                message:
                 type: string
                 example: "Get list of posts successfully"
        '404': 
          description: "Get all posts failed"
          content:
           application/json:
            schema:
              type: object
              properties:
               success:
                 type: string
                 example: false
               status:
                 type: integer
                 example: 404
               message:
                 type: string
                 example: "Get all posts failed"  
   /posts/{postId}:
    get:
      tags:
        - post
      description: Get details of a post
      operationId: details post
      security:
        - BearerAuth: []
      parameters:
        - name: postId
          in: path
          description: Id of post
          required: true
          schema:
            type: integer
        - in: query
          name: language
          description: "Locale language (optional), default is en_us. If the locale is not en_us, query to retrieve related posts with the related_id as postId."
          schema:
            type: string
      responses:
        '200':
          description: "Get details post successfully"
          content:
           application/json:
            schema:
               type: object
               properties:
                success:
                 type: string
                 example: true
                data:
                  type: object
                  schema:
                  $ref: '#/components/schemas/DetailPost'
                status:
                 type: integer
                 example: 200
                message:
                 type: string
                 example: "ok"
        '404':
          description: "Get details post failed"
          content:
           application/json:
            schema:
              type: object
              properties:
               success:
                 type: string
                 example: false
               status:
                 type: integer
                 example: 404
               message:
                 type: string
                 example: "Post not found"  
   /posts/create:
    post:
      tags:
        - post
      description: Create new post
      operationId: create post
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: categoryId
          required: true
          schema:
            type: integer
          description: Id of category  which the post will belong.
        - in: query
          name: relatedId
          schema:
            type: integer
            default: 0
          description: Id of parent post(optional)
        - in: query
          name: language
          required: true
          schema:
            type: string
          description: language locale contains only a-z _ 
      requestBody:
        description: Information about the post
        content:
          application/json:
            schema:
               type: object
               properties:
                title:
                 type: string
                 example: "Learn about ReactJs for beginners"
                content:
                 type: string
                 example: "Content of the post learn about ReactJs for beginners"
        required: true
      responses:
        '200':
          description: "Created post successfully"
          content:
           application/json:
            schema:
               type: object
               properties:
                success:
                 type: string
                 example: true
                data:
                  type: object
                  schema:
                  $ref: '#/components/schemas/Post'
                status:
                 type: integer
                 example: 200
                message:
                 type: string
                 example: "Created post successfully"
        '404':
          description: "Created post failed"
          content:
           application/json:
            schema:
              type: object
              properties:
               success:
                 type: string
                 example: false
               status:
                 type: integer
                 example: 404
               message:
                 type: string
                 example: "Created post failed"  
   /posts/update/{postId}:
    put:
      tags:
        - post
      description: Update post
      operationId: update post
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: postId
          description: Id of post to update
          required: true
          schema:
            type: integer
        - in: query
          name: categoryId
          required: true
          schema:
            type: integer
          description: Id of category  which the post will belong.
        - in: query
          name: language
          required: true
          schema:
            type: string
          description: language locale contains only a-z _  
      requestBody:
        description: Information update
        content:
          application/json:
            schema:
               type: object
               properties:
                title:
                 type: string
                 example: "Learn about ReactJs for beginners"
                content:
                 type: string
                 example: "Content of the post learn about ReactJs for beginners"
        required: true
      responses:
        '200':
          description: "Updated post successfully"
          content:
           application/json:
            schema:
               type: object
               properties:
                success:
                 type: string
                 example: true
                data:
                 type: string
                 example: Post updated successfully
                status:
                 type: integer
                 example: 200
                message:
                 type: string
                 example: "ok"
        '404':
          description: "Updated post failed"
          content:
           application/json:
            schema:
              type: object
              properties:
               success:
                 type: string
                 example: false
               status:
                 type: integer
                 example: 404
               message:
                 type: string
                 example: "Updated post failed"  
   /posts/delete/{postId}:
    delete:
      tags:
        - post
      description: Delete post
      operationId: delete post
      security:
        - BearerAuth: []
      parameters:
        - name: postId
          in: path
          description: Id of post to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Deleted post successfully"
          content:
           application/json:
            schema:
               type: object
               properties:
                success:
                 type: string
                 example: true
                status:
                 type: integer
                 example: 200
                message:
                 type: string
                 example: "Post deleted successfully"
        '404':
          description: "Post deleted failed"
          content:
           application/json:
            schema:
              type: object
              properties:
               success:
                 type: string
                 example: false
               status:
                 type: integer
                 example: 404
               message:
                 type: string
                 example: "Post not found or has been deleted"  
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
          example: 1
        category_id:
           type: integer
           example: 6
        user_id:
           type: integer
           example: 6
        related_id:
           type: integer
           example: 0
        locale:
           type: string
           example: "en_us"
        title:
          type: string
          example: "Learn about Reactjs for beginners"
        slug:
          type: string
          example: "learn-about-reactjs-for-beginners"
        content:
          type: string
          example: "Content of post learn about Reactjs for beginners"
        created_at:
          type: string
          example: "2024-05-05T10:42:20.000Z"
        updated_at:
          type: string
          example: "2024-05-05T10:42:20.000Z"     
    User:  
     type: object
     properties:
      id:
        type: integer
        format: int64
      username:
        type: string
        maxLength: 30
      email:
        type: string
        format: email
        maxLength: 30
      role:
        type: string
        example: owner
      password:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
     example:
      id: 1
      username: "john_doe"
      email: "john@example.com"
      role: "owner"
      created_at: "2024-05-06T12:00:00Z"
      updated_at: "2024-05-06T12:00:00Z"
    Category:
     type: object
     properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        maxLength: 20
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
     example:
      id: 1
      name: "reactjs"
      created_at: "2024-05-06T12:00:00Z"
      updated_at: "2024-05-06T12:00:00Z"
    DetailPost:
      type: object
      properties:
        id:
          type: integer
          example: 1
        related_id:
           type: integer
           example: 0
        locale:
           type: string
           example: "en_us"
        title:
          type: string
          example: "Learn about Reactjs for beginners"
        slug:
          type: string
          example: "learn-about-reactjs-for-beginners"
        content:
          type: string
          example: "Content of post learn about Reactjs for beginners"
        created_at:
          type: string
          example: "2024-05-05T10:42:20.000Z"
        updated_at:
          type: string
          example: "2024-05-05T10:42:20.000Z" 
        author: 
          type: object
          $ref: '#/components/schemas/User'
        category:
          type: object
          $ref: '#/components/schemas/Category'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


     

       
   
         
    